{"version":3,"sources":["components/radioButton/style.module.scss","screens/login/style.module.scss","components/button/style.module.scss","screens/main/style.module.scss","screens/registration/style.module.scss","components/inputField/style.module.scss","screens/router/style.module.scss","components/table/style.module.scss","utils/storage.js","api/auth.js","api/servers.js","components/header/index.jsx","components/inputField/index.jsx","components/table/index.jsx","components/button/index.jsx","components/radioButton/index.jsx","screens/main/index.jsx","screens/login/index.jsx","screens/registration/index.jsx","screens/router/index.jsx","App.js","index.js","components/header/style.module.scss"],"names":["module","exports","storage","set","data","name","localStorage","setItem","JSON","stringify","get","parse","getItem","api","login","email","password","a","async","url","axios","post","then","res","catch","e","alert","registration","response","getSession","usrId","address","token","headers","Authorization","console","log","getServers","Header","closeApp","hideApp","user","showPanel","logout","className","css","header","header_close","onClick","header_hide","style","color","marginRight","userSelect","cursor","InputField","placeholder","value","setValue","isLabel","onChange","target","input","Row","ip","maxPlayers","online","port","isSelected","chooseServer","table_row","selected","table_row_ip","table_row_name","table_row_online","Table","servers","chosenServer","table","map","serverData","i","key","Button","type","button","RadioButton","isChecked","text","radioButton","radioButton_circle","radioButton_circle_checked","fs","window","require","shell","remote","Main","useState","serversData","setServersData","setUser","gameData","session","setChosenServer","gamePath","setGamePath","useEffect","serversApi","saveSession","fileName","existsSync","unlinkSync","appendFile","err","NotificationManager","warning","id","openItem","runGame","main","server","authApi","prev","buttons","success","serversAuth","Login","setCurrentScreen","setEmail","setPassword","connectionData","setConnectionData","authUrl","setAuthUrl","localConnection","loginContent","loginContent_servers","changeAuthApi","loginContent_form","label","Registration","setName","registrationContent","registrationContent_form","app","Router","params","currentScreen","getUser","useCallback","storage_user","exit","App","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50256e84.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioButton\":\"style_radioButton__2Fc5S\",\"radioButton_circle\":\"style_radioButton_circle__dIDSy\",\"radioButton_circle_checked\":\"style_radioButton_circle_checked__stn5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContent\":\"style_loginContent__3QkuD\",\"loginContent_servers\":\"style_loginContent_servers__StBcc\",\"loginContent_form\":\"style_loginContent_form__uxtyC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"style_button__1HQff\",\"button_white\":\"style_button_white__3xCVX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"style_main__2rq8m\",\"buttons\":\"style_buttons__20n9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationContent\":\"style_registrationContent__1xvuW\",\"registrationContent_form\":\"style_registrationContent_form__1UKkS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"style_input__178bl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"style_app__2q9UC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"style_table__2TLCE\",\"table_row\":\"style_table_row__3XQ9g\",\"table_row_ip\":\"style_table_row_ip__vO0EC\",\"table_row_name\":\"style_table_row_name__3V0z7\",\"selected\":\"style_selected__1avxB\"};","const set = (data, name) => localStorage.setItem(name, JSON.stringify(data));\r\n\r\nconst get = (data) => JSON.parse(localStorage.getItem(data));\r\n\r\nconst storage = {\r\n  set,\r\n  get,\r\n};\r\n\r\nexport default storage;\r\n","import axios from \"axios\";\r\nimport { storage } from \"../utils\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\n\r\nconst login = async (email, password) => {\r\n  const url = storage.get(\"authUrl\");\r\n  return await axios\r\n    .post(`${url}users/login`, { email, password })\r\n    .then((res) => res.data)\r\n    .catch((e) => alert(e));\r\n};\r\n\r\nconst registration = async (email, password, name) => {\r\n  const url = storage.get(\"authUrl\");\r\n  return await axios\r\n    .post(`${url}users`, { email, password, name })\r\n    .then((res) => alert(\"Ok!\"))\r\n    .catch((e) => alert(e?.response?.data ?? \"Something wrong.\"));\r\n};\r\n\r\nconst getSession = async (usrId, address, token) => {\r\n  const url = storage.get(\"authUrl\");\r\n\r\n  return await axios\r\n    .post(\r\n      `${url}users/${usrId}/play/${address}`,\r\n      {},\r\n      { headers: { Authorization: token } }\r\n    )\r\n    .then((res) => res.data)\r\n    .catch((e) => console.log(e));\r\n};\r\n\r\nconst api = { login, registration, getSession };\r\nexport default api;\r\n","import axios from \"axios\";\r\nimport { storage } from \"../utils\";\r\n\r\nconst getServers = async (email, password) => {\r\n  const url = storage.get(\"authUrl\");\r\n  return await axios\r\n    .get(`${url}servers`, { email, password })\r\n    .then((res) => res.data)\r\n    .catch((e) => console.log(e));\r\n};\r\n\r\nconst api = { getServers };\r\nexport default api;\r\n","import React from \"react\";\r\nimport css from \"./style.module.scss\";\r\n\r\nconst Header = ({ closeApp, hideApp, showPanel = false, user, logout }) => {\r\n  return (\r\n    <div className={css.header}>\r\n      <div\r\n        className={`no-drag ${css.header_close}`}\r\n        onClick={() => closeApp()}\r\n      ></div>\r\n      <div\r\n        className={`no-drag ${css.header_hide}`}\r\n        onClick={() => hideApp()}\r\n      ></div>\r\n      <div\r\n        onClick={() => logout()}\r\n        className=\"no-drag\"\r\n        style={{\r\n          color: \"white\",\r\n          marginRight: \"40px\",\r\n          userSelect: \"none\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        Выйти\r\n      </div>\r\n      <div style={{ color: \"white\", marginRight: \"30px\" }}>{user?.name}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport css from \"./style.module.scss\";\r\nconst InputField = ({\r\n  placeholder = \"placeholder\",\r\n  value,\r\n  setValue,\r\n  isLabel = false,\r\n}) => {\r\n  return (\r\n    <>\r\n      {isLabel && <div style={{color:'white'}}>{placeholder}</div>}\r\n      <input\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n        className={css.input}\r\n        placeholder={placeholder}\r\n      ></input>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\nimport css from \"./style.module.scss\";\r\nconst Row = ({\r\n  ip,\r\n  maxPlayers,\r\n  name,\r\n  online,\r\n  port,\r\n  isSelected = false,\r\n  chooseServer,\r\n  header\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`${css.table_row} ${isSelected ? css.selected : \"\"}`}\r\n      onClick={() =>!header&& chooseServer()}\r\n    >\r\n      <div className={css.table_row_ip}>\r\n        {ip}:{port}\r\n      </div>\r\n      <div className={css.table_row_name}>{name}</div>\r\n      <div className={css.table_row_online}>\r\n        {online}\r\n        {maxPlayers ? \"/\" : \"\"}\r\n        {maxPlayers}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Table = ({ servers = [], chosenServer, chooseServer }) => {\r\n  return (\r\n    <div className={css.table}>\r\n      <Row name=\"Имя\" ip=\"ip\" online=\"Онлайн\" header/>\r\n      {servers.map((serverData, i) => (\r\n        <Row\r\n          key={i}\r\n          {...serverData}\r\n          isSelected={chosenServer[\"server-ip\"] === serverData.ip}\r\n          chooseServer={() => chooseServer(serverData)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport css from \"./style.module.scss\";\r\nconst Button = ({ name, type = \"white\", onClick }) => {\r\n  return (\r\n    <div className={`${css[`button_${type}`]} ${css.button}`} onClick={() => onClick()}>\r\n      {name}\r\n    </div>\r\n  );\r\n};\r\nexport default Button;\r\n","import React from \"react\";\r\nimport css from \"./style.module.scss\";\r\nconst RadioButton = ({ isChecked = false, onClick, text = \"\" }) => {\r\n  return (\r\n    <div className={css.radioButton} onClick={() => !isChecked && onClick()}>\r\n      <div className={css.radioButton_circle}>\r\n        {isChecked && <div className={css.radioButton_circle_checked} />}\r\n      </div>\r\n      <div>{text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RadioButton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport { serversApi, authApi } from \"../../api\";\r\nimport { storage } from \"../../utils\";\r\nimport { Table, Button, InputField } from \"../../components\";\r\nimport css from \"./style.module.scss\";\r\nconst fs = window.require(\"fs\");\r\nconst { shell } = window.require(\"electron\").remote;\r\n\r\nconst Main = ({}) => {\r\n  const [serversData, setServersData] = useState([]);\r\n  const [user, setUser] = useState({});\r\n  const [chosenServer, setChosenServer] = useState({\r\n    \"server-ip\": \"\",\r\n    \"server-port\": 0,\r\n    \"show-me\": false,\r\n    \"enable-console\": false,\r\n    gameData: {\r\n      session: \"\",\r\n    },\r\n  });\r\n  const [gamePath, setGamePath] = useState(storage.get(\"gamePath\") ?? \"\");\r\n\r\n  useEffect(() => {\r\n    storage.set(gamePath, \"gamePath\");\r\n  }, [gamePath]);\r\n\r\n  useEffect(() => {\r\n    serversApi.getServers().then(setServersData);\r\n    setUser(storage.get(\"connection\"));\r\n  }, []);\r\n\r\n  const chooseServer = async (server) => {\r\n    if (user)\r\n      authApi\r\n        .getSession(user.id, `${server.ip}:${server.port}`, user.token)\r\n        .then((session) => {\r\n          console.log(session);\r\n          setChosenServer((prev) => ({\r\n            ...prev,\r\n            \"server-ip\": server.ip,\r\n            \"server-port\": server.port,\r\n            gameData: {\r\n              session: session.session,\r\n            },\r\n          }));\r\n        });\r\n  };\r\n\r\n  const runGame = () => {\r\n    try {\r\n      if (gamePath) {\r\n        shell.openItem(`${gamePath}/skse64_loader.exe`);\r\n      } else {\r\n        alert(\"gamePath \");\r\n      }\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  };\r\n  const saveSession = () => {\r\n    if (gamePath) {\r\n      const fileName = `${gamePath}/Data/Platform/Plugins/skymp5-client-settings.txt`;\r\n      try {\r\n        const isExist = fs.existsSync(fileName);\r\n        if (!isExist) {\r\n          fs.appendFile(fileName, JSON.stringify(chosenServer), (err) =>\r\n            console.log(err)\r\n          );\r\n        } else {\r\n          fs.unlinkSync(fileName);\r\n          fs.appendFile(fileName, JSON.stringify(chosenServer), (err) =>\r\n            console.log(err)\r\n          );\r\n        }\r\n        if (!chosenServer[\"server-ip\"]) {\r\n          NotificationManager.warning(\"Выбери сервер.\");\r\n        }\r\n\r\n        user?.id && chosenServer[\"server-ip\"] && runGame();\r\n      } catch (e) {\r\n        alert(e);\r\n      }\r\n    } else {\r\n      NotificationManager.warning(\"Надо путь игры\");\r\n    }\r\n  };\r\n  return (\r\n    <div className={css.main}>\r\n      <Table\r\n        servers={serversData}\r\n        chosenServer={chosenServer}\r\n        chooseServer={chooseServer}\r\n      />\r\n      <InputField\r\n        value={gamePath}\r\n        setValue={setGamePath}\r\n        placeholder=\"Путь игры (//)\"\r\n      />\r\n      <div className={css.buttons}>\r\n        <div>\r\n          <Button\r\n            name={\"Играть\"}\r\n            onClick={() => {\r\n              saveSession();\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Button\r\n            name={\"Обновить\"}\r\n            onClick={() => {\r\n              serversApi.getServers().then(setServersData);\r\n              NotificationManager.success(\"Обновлено\");\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <NotificationContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport css from \"./style.module.scss\";\r\nimport { InputField, Button, RadioButton } from \"../../components\";\r\nimport { authApi } from \"../../api\";\r\nimport { storage } from \"../../utils\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\n\r\nconst serversAuth = [\r\n  \"https://skymp-auth.herokuapp.com/api/\",\r\n  \"https://skymp.io/api/\",\r\n];\r\n\r\nconst Login = ({ setUser, setCurrentScreen }) => {\r\n  const [email, setEmail] = useState(\"testEmain@email.com\");\r\n  const [password, setPassword] = useState(\"1q2w3e4r5t\");\r\n  const [connectionData, setConnectionData] = useState(null);\r\n  const [authUrl, setAuthUrl] = useState(\r\n    storage.get(\"authUrl\")\r\n      ? storage.get(\"authUrl\")\r\n      : \"https://skymp-auth.herokuapp.com/api/\"\r\n  );\r\n  const onLogin = () =>\r\n    authApi.login(email, password).then((data) => {\r\n      setConnectionData(data);\r\n      setUser(data);\r\n    });\r\n\r\n  const changeAuthApi = (url) => {\r\n    setAuthUrl(url);\r\n    storage.set(url, \"authUrl\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const localConnection = storage.get(\"connection\");\r\n    if (localConnection) {\r\n      storage.set(localConnection, \"connection\");\r\n    }\r\n    if (connectionData) {\r\n      storage.set(connectionData, \"connection\");\r\n    }\r\n    storage.set(authUrl, \"authUrl\");\r\n  }, [connectionData]);\r\n\r\n  return (\r\n    <div className={css.loginContent}>\r\n      <div className={css.loginContent_servers}>\r\n        <div style={{ color: \"white\" }}>Выберите сервер авторизации:</div>\r\n        {serversAuth.map((url, i) => (\r\n          <RadioButton\r\n            key={i}\r\n            isChecked={authUrl === url}\r\n            text={url}\r\n            value={url}\r\n            onClick={() => changeAuthApi(url)}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <div className={css.loginContent_form}>\r\n        <InputField\r\n          value={email}\r\n          setValue={setEmail}\r\n          label={\"Email\"}\r\n          type=\"text\"\r\n          placeholder=\"Почта\"\r\n          isLabel\r\n        />\r\n        <InputField\r\n          value={password}\r\n          setValue={setPassword}\r\n          label={\"Password\"}\r\n          placeholder=\"Пароль\"\r\n          type=\"password\"\r\n          isLabel\r\n        />\r\n        <Button name=\"Войти\" onClick={() => onLogin()} />\r\n        <Button\r\n          name=\"Регистрация\"\r\n          onClick={() => setCurrentScreen(\"Registration\")}\r\n        />\r\n        {/* <Button\r\n          name=\"Test\"\r\n          onClick={() =>\r\n            download(\r\n              () => console.log(\"start\"),\r\n              () => console.log(\"end\")\r\n            )\r\n          }\r\n        /> */}\r\n      </div>\r\n      <NotificationContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport css from \"./style.module.scss\";\r\nimport { InputField, Button } from \"../../components\";\r\nimport { authApi } from \"../../api\";\r\nimport { storage } from \"../../utils\";\r\n\r\nconst Registration = ({ setCurrentScreen }) => {\r\n  const [email, setEmail] = useState(\"testEmain@email.com\");\r\n  const [password, setPassword] = useState(\"1q2w3e4r5t\");\r\n  const [name, setName] = useState(\"TestName1233\");\r\n\r\n  const onRegistration = () => {\r\n    authApi.registration(email, password, name);\r\n  };\r\n  return (\r\n    <div className={css.registrationContent}>\r\n      <div className={css.registrationContent_form}>\r\n        <InputField\r\n          value={name}\r\n          setValue={setName}\r\n          label={\"Email\"}\r\n          type=\"text\"\r\n          placeholder=\"Имя\"\r\n          isLabel\r\n        />\r\n        <InputField\r\n          value={email}\r\n          setValue={setEmail}\r\n          label={\"Email\"}\r\n          type=\"text\"\r\n          placeholder=\"Почта\"\r\n          isLabel\r\n        />\r\n        <InputField\r\n          value={password}\r\n          setValue={setPassword}\r\n          label={\"Password\"}\r\n          placeholder=\"Пароль\"\r\n          type=\"password\"\r\n          isLabel\r\n        />\r\n        <Button\r\n          name=\"Регистрация\"\r\n          onClick={() => onRegistration()}\r\n        />\r\n        <Button name=\"Назад\" onClick={() => setCurrentScreen(\"Login\")} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Registration;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { Header } from \"../../components\";\r\nimport { Preloader, Login, Registration, Main } from \"../\";\r\nimport { storage } from \"../../utils\";\r\nimport css from \"./style.module.scss\";\r\nconst { app } = window.require(\"electron\").remote;\r\nconst Router = (params) => {\r\n  const [currentScreen, setCurrentScreen] = useState(\"Login\");\r\n  const [user, setUser] = useState(null);\r\n  const getUser = useCallback(() => storage.get(\"connection\"), []);\r\n  const logout = () => {\r\n    storage.set(null, \"connection\");\r\n    setUser(null);\r\n    setCurrentScreen(\"Login\");\r\n  };\r\n  const closeApp = () => app.exit();\r\n  const hideApp = () => {};\r\n\r\n  useEffect(() => {\r\n    const storage_user = getUser();\r\n    setUser(storage_user);\r\n    if (storage_user) {\r\n      setCurrentScreen(\"Main\");\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className={css.app}>\r\n      <Header\r\n        closeApp={closeApp}\r\n        hideApp={hideApp}\r\n        user={user}\r\n        logout={logout}\r\n      />\r\n      {/* {!currentScreen && <Preloader />} */}\r\n      {!user && currentScreen === \"Login\" && (\r\n        <Login setCurrentScreen={setCurrentScreen} setUser={setUser} />\r\n      )}\r\n\r\n      {currentScreen === \"Registration\" && (\r\n        <Registration setCurrentScreen={setCurrentScreen} />\r\n      )}\r\n      {!!user && <Main setCurrentScreen={setCurrentScreen} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React, { Component } from \"react\";\nimport { Router } from \"./screens\";\n\nclass App extends Component {\n  render() {\n    return <Router />;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\nimport 'react-notifications/lib/notifications.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"style_header__OMpc0\",\"header_close\":\"style_header_close__2r6CZ\",\"header_hide\":\"style_header_hide__3xCu2\"};"],"sourceRoot":""}