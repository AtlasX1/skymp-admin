{"version":3,"sources":["components/logo/style.module.scss","screens/registration/style.module.scss","components/header/style.module.scss","components/radioButton/style.module.scss","components/checkBox/style.module.scss","components/button/style.module.scss","screens/main/style.module.scss","screens/login/style.module.scss","components/inputField/style.module.scss","screens/router/style.module.scss","utils/storage.js","api/auth.js","api/servers.js","components/header/index.jsx","components/inputField/index.jsx","components/table/index.jsx","components/button/index.jsx","components/checkBox/index.jsx","components/logo/index.jsx","screens/main/index.jsx","redux/reducers/account.js","redux/reducers/screens.js","redux/index.js","screens/login/index.jsx","screens/registration/index.jsx","screens/router/index.jsx","screens/preloader/index.jsx","App.js","index.js","components/table/style.module.scss"],"names":["module","exports","storage","set","data","name","localStorage","setItem","JSON","stringify","get","parse","getItem","api","login","email","password","a","async","url","axios","post","then","res","catch","e","alert","registration","response","getSession","usrId","address","token","headers","Authorization","console","log","getServers","app","window","require","remote","Header","Left","Center","Right","className","css","header","header_right","header_right_hide","onClick","header_right_close","exit","InputField","placeholder","value","setValue","label","type","style","color","onChange","target","input","Row","ip","maxPlayers","online","port","isSelected","chooseServer","table_row","selected","table_row_ip","table_row_name","table_row_online","Table","servers","chosenServer","table","map","serverData","i","key","Button","button","CheckBox","isChecked","checkBox","checkBox_square","checkBox_square_checked","Logo","text","welcome","welcome_logo","welcome_text","welcome_text_line","welcome_text_value","fs","shell","Main","useState","serversData","setServersData","user","setUser","gameData","session","setChosenServer","gamePath","setGamePath","useEffect","serversApi","saveSession","fileName","existsSync","unlinkSync","appendFile","err","NotificationManager","warning","id","openItem","runGame","main","server","authApi","prev","buttons","success","createAsyncThunk","payload","rejectWithValue","isSaveAccount","initialState","loading","error","accountSlice","createSlice","reducers","logout","state","action","extraReducers","pending","fulfilled","rejected","screenSlice","screen","changeScreen","store","configureStore","reducer","accountReducer","screenReducer","accountActions","actions","asyncActions","screenActions","Login","setEmail","setPassword","setIsSaveAccount","dispatch","useDispatch","useCallback","loginContent","loginContent_form","BackButton","backButton","backButton_icon","backButton_text","Registration","setName","registrationContent","registrationContent_form","routers","Preloader","ScreenWrapper","Component","component","rest","Router","useSelector","params","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ef27eb4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"welcome\":\"style_welcome__2SbjV\",\"welcome_logo\":\"style_welcome_logo__2n_br\",\"welcome_text\":\"style_welcome_text__2zhyI\",\"welcome_text_value\":\"style_welcome_text_value__2-ay3\",\"welcome_text_line\":\"style_welcome_text_line__2GVLS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationContent\":\"style_registrationContent__1xvuW\",\"registrationContent_form\":\"style_registrationContent_form__1UKkS\",\"backButton\":\"style_backButton__fY_Qj\",\"backButton_icon\":\"style_backButton_icon__hAJ8V\",\"backButton_text\":\"style_backButton_text__2YrVF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"style_header__OMpc0\",\"header_back\":\"style_header_back__3kvDu\",\"header_back_icon\":\"style_header_back_icon__FQJmi\",\"header_back_text\":\"style_header_back_text__3PWnO\",\"header_right\":\"style_header_right__8ufBv\",\"header_right_close\":\"style_header_right_close__Y1G4C\",\"header_right_hide\":\"style_header_right_hide__nac9m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioButton\":\"style_radioButton__2Fc5S\",\"radioButton_circle\":\"style_radioButton_circle__dIDSy\",\"radioButton_circle_checked\":\"style_radioButton_circle_checked__stn5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkBox\":\"style_checkBox__3H6Uf\",\"checkBox_square\":\"style_checkBox_square__3yD37\",\"checkBox_square_checked\":\"style_checkBox_square_checked__1_AUX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"style_button__1HQff\",\"button_white\":\"style_button_white__3xCVX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"style_main__2rq8m\",\"buttons\":\"style_buttons__20n9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContent\":\"style_loginContent__3QkuD\",\"loginContent_servers\":\"style_loginContent_servers__StBcc\",\"loginContent_form\":\"style_loginContent_form__uxtyC\",\"loginContent_welcome\":\"style_loginContent_welcome__1Gfi5\",\"loginContent_welcome_logo\":\"style_loginContent_welcome_logo__3NYgC\",\"loginContent_welcome_text\":\"style_loginContent_welcome_text__1_u53\",\"loginContent_welcome_text_value\":\"style_loginContent_welcome_text_value__110L3\",\"loginContent_welcome_text_line\":\"style_loginContent_welcome_text_line__2DOVT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"style_input__178bl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"style_app__2q9UC\"};","const set = (data, name) => localStorage.setItem(name, JSON.stringify(data));\r\n\r\nconst get = (data) => JSON.parse(localStorage.getItem(data));\r\n\r\nconst storage = {\r\n  set,\r\n  get,\r\n};\r\n\r\nexport default storage;\r\n","import axios from \"axios\";\r\nimport { storage } from \"../utils\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\n\r\nconst login = async (email, password) => {\r\n  const url = storage.get(\"authUrl\");\r\n  return await axios\r\n    .post(`${url}users/login`, { email, password })\r\n    .then((res) => res.data)\r\n    .catch((e) => alert(e));\r\n};\r\n\r\nconst registration = async (email, password, name) => {\r\n  const url = storage.get(\"authUrl\");\r\n  return await axios\r\n    .post(`${url}users`, { email, password, name })\r\n    .then((res) => alert(\"Ok!\"))\r\n    .catch((e) => alert(e?.response?.data ?? \"Something wrong.\"));\r\n};\r\n\r\nconst getSession = async (usrId, address, token) => {\r\n  const url = storage.get(\"authUrl\");\r\n\r\n  return await axios\r\n    .post(\r\n      `${url}users/${usrId}/play/${address}`,\r\n      {},\r\n      { headers: { Authorization: token } }\r\n    )\r\n    .then((res) => res.data)\r\n    .catch((e) => console.log(e));\r\n};\r\n\r\nconst api = { login, registration, getSession };\r\nexport default api;\r\n","import axios from \"axios\";\r\nimport { storage } from \"../utils\";\r\n\r\nconst getServers = async (email, password) => {\r\n  const url = storage.get(\"authUrl\");\r\n  return await axios\r\n    .get(`${url}servers`, { email, password })\r\n    .then((res) => res.data)\r\n    .catch((e) => console.log(e));\r\n};\r\n\r\nconst api = { getServers };\r\nexport default api;\r\n","import React from \"react\";\r\nimport css from \"./style.module.scss\";\r\nconst { app } = window.require(\"electron\").remote;\r\nconst Header = ({\r\n  Left = () => <div></div>,\r\n  Center = () => <div></div>,\r\n  Right = () => <div></div>,\r\n}) => {\r\n  const closeApp = () => app.exit();\r\n  const hideApp = () => {};\r\n  return (\r\n    <div className={css.header}>\r\n      <Left />\r\n      <Center />\r\n      <div className={css.header_right}>\r\n        <Right />\r\n        <div className={css.header_right_hide} onClick={() => hideApp()} />\r\n        <div className={css.header_right_close} onClick={() => closeApp()} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport css from \"./style.module.scss\";\r\nconst InputField = ({\r\n  placeholder = \"placeholder\",\r\n  value,\r\n  setValue,\r\n  label = \"\",\r\n  type = \"text\",\r\n}) => {\r\n  return (\r\n    <>\r\n      {!!label && <div style={{ color: \"white\" }}>{label}</div>}\r\n      <input\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n        className={css.input}\r\n        placeholder={placeholder}\r\n        type={type}\r\n      ></input>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\nimport css from \"./style.module.scss\";\r\nconst Row = ({\r\n  ip,\r\n  maxPlayers,\r\n  name,\r\n  online,\r\n  port,\r\n  isSelected = false,\r\n  chooseServer,\r\n  header\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`${css.table_row} ${isSelected ? css.selected : \"\"}`}\r\n      onClick={() =>!header&& chooseServer()}\r\n    >\r\n      <div className={css.table_row_ip}>\r\n        {ip}:{port}\r\n      </div>\r\n      <div className={css.table_row_name}>{name}</div>\r\n      <div className={css.table_row_online}>\r\n        {online}\r\n        {maxPlayers ? \"/\" : \"\"}\r\n        {maxPlayers}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Table = ({ servers = [], chosenServer, chooseServer }) => {\r\n  return (\r\n    <div className={css.table}>\r\n      <Row name=\"Имя\" ip=\"ip\" online=\"Онлайн\" header/>\r\n      {servers.map((serverData, i) => (\r\n        <Row\r\n          key={i}\r\n          {...serverData}\r\n          isSelected={chosenServer[\"server-ip\"] === serverData.ip}\r\n          chooseServer={() => chooseServer(serverData)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport css from \"./style.module.scss\";\r\nconst Button = ({ name, type = \"white\", onClick }) => {\r\n  return (\r\n    <div className={`${css[`button_${type}`]} ${css.button}`} onClick={() => onClick()}>\r\n      {name}\r\n    </div>\r\n  );\r\n};\r\nexport default Button;\r\n","import React from \"react\";\r\nimport css from \"./style.module.scss\";\r\nconst CheckBox = ({ onClick, isChecked = false, label }) => {\r\n  return (\r\n    <div\r\n      className={css.checkBox}\r\n      onClick={() => onClick()}\r\n    >\r\n      <div className={css.checkBox_square}>\r\n        {isChecked && <div className={css.checkBox_square_checked}></div>}\r\n      </div>\r\n      {label && <div>{label}</div>}\r\n    </div>\r\n  );\r\n};\r\nexport default CheckBox;\r\n","import React from \"react\";\r\nimport css from \"./style.module.scss\";\r\nconst Logo = ({ text = \"Добро пожаловать\" }) => {\r\n  return (\r\n    <div className={css.welcome}>\r\n      <div className={css.welcome_logo}></div>\r\n      <div className={css.welcome_text}>\r\n        <div className={css.welcome_text_line}></div>\r\n        <div className={css.welcome_text_value}>{text} </div>\r\n        <div className={css.welcome_text_line}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  Logo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport { serversApi, authApi } from \"../../api\";\r\nimport { storage } from \"../../utils\";\r\nimport { Table, Button, InputField, Header } from \"../../components\";\r\nimport css from \"./style.module.scss\";\r\nconst fs = window.require(\"fs\");\r\nconst { shell } = window.require(\"electron\").remote;\r\n\r\nconst Main = ({}) => {\r\n  const [serversData, setServersData] = useState([]);\r\n  const [user, setUser] = useState({});\r\n  const [chosenServer, setChosenServer] = useState({\r\n    \"server-ip\": \"\",\r\n    \"server-port\": 0,\r\n    \"show-me\": false,\r\n    \"enable-console\": false,\r\n    gameData: {\r\n      session: \"\",\r\n    },\r\n  });\r\n  const [gamePath, setGamePath] = useState(storage.get(\"gamePath\") ?? \"\");\r\n\r\n  useEffect(() => {\r\n    storage.set(gamePath, \"gamePath\");\r\n  }, [gamePath]);\r\n\r\n  useEffect(() => {\r\n    serversApi.getServers().then(setServersData);\r\n    setUser(storage.get(\"connection\"));\r\n  }, []);\r\n\r\n  const chooseServer = async (server) => {\r\n    if (user)\r\n      authApi\r\n        .getSession(user.id, `${server.ip}:${server.port}`, user.token)\r\n        .then((session) => {\r\n          console.log(session);\r\n          setChosenServer((prev) => ({\r\n            ...prev,\r\n            \"server-ip\": server.ip,\r\n            \"server-port\": server.port,\r\n            gameData: {\r\n              session: session.session,\r\n            },\r\n          }));\r\n        });\r\n  };\r\n\r\n  const runGame = () => {\r\n    try {\r\n      if (gamePath) {\r\n        shell.openItem(`${gamePath}/skse64_loader.exe`);\r\n      } else {\r\n        alert(\"gamePath \");\r\n      }\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  };\r\n  const saveSession = () => {\r\n    if (gamePath) {\r\n      const fileName = `${gamePath}/Data/Platform/Plugins/skymp5-client-settings.txt`;\r\n      try {\r\n        const isExist = fs.existsSync(fileName);\r\n        if (!isExist) {\r\n          fs.appendFile(fileName, JSON.stringify(chosenServer), (err) =>\r\n            console.log(err)\r\n          );\r\n        } else {\r\n          fs.unlinkSync(fileName);\r\n          fs.appendFile(fileName, JSON.stringify(chosenServer), (err) =>\r\n            console.log(err)\r\n          );\r\n        }\r\n        if (!chosenServer[\"server-ip\"]) {\r\n          NotificationManager.warning(\"Выбери сервер.\");\r\n        }\r\n\r\n        user?.id && chosenServer[\"server-ip\"] && runGame();\r\n      } catch (e) {\r\n        alert(e);\r\n      }\r\n    } else {\r\n      NotificationManager.warning(\"Надо путь игры\");\r\n    }\r\n  };\r\n  return (\r\n\r\n    <>\r\n      <Header/>\r\n      <div className={css.main}>\r\n      <Table\r\n        servers={serversData}\r\n        chosenServer={chosenServer}\r\n        chooseServer={chooseServer}\r\n      />\r\n      <InputField\r\n        value={gamePath}\r\n        setValue={setGamePath}\r\n        placeholder=\"Путь игры (//)\"\r\n      />\r\n      <div className={css.buttons}>\r\n        <div>\r\n          <Button\r\n            name={\"Играть\"}\r\n            onClick={() => {\r\n              saveSession();\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Button\r\n            name={\"Обновить\"}\r\n            onClick={() => {\r\n              serversApi.getServers().then(setServersData);\r\n              NotificationManager.success(\"Обновлено\");\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <NotificationContainer />\r\n    </div>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { storage } from \"../../utils\";\r\nimport { authApi } from \"../../api\";\r\nexport const login = createAsyncThunk(\r\n  \"accountReducer/login\",\r\n  async (payload, { rejectWithValue }) => {\r\n    try {\r\n      const user = await authApi.login(payload.email, payload.password);\r\n      if (payload.isSaveAccount) {\r\n        storage.set(user, \"connection\");\r\n      }\r\n      return user;\r\n    } catch (err) {\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  user: storage.get(\"connection\") ?? null,\r\n  loading: \"\",\r\n  error: \"\",\r\n};\r\n\r\nconst accountSlice = createSlice({\r\n  name: \"accountReducer\",\r\n  initialState,\r\n  reducers: {\r\n    logout: (state, action) => {\r\n      storage.set(null, \"connection\");\r\n      state.user = null;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [login.pending.type]: (state) => {\r\n      state.loading = \"pending\";\r\n      state.error = \"\";\r\n    },\r\n    [login.fulfilled.type]: (state, { payload }) => {\r\n      state.loading = \"idle\";\r\n      state.error = \"\";\r\n      state.user = payload;\r\n    },\r\n    [login.rejected.type]: (state, action) => {\r\n      state.loading = \"idle\";\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default accountSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { storage } from \"../../utils\";\r\n\r\nconst initialState = {\r\n  screen: \"Preloader\",\r\n  loading: \"\",\r\n  error: \"\",\r\n};\r\n\r\nconst screenSlice = createSlice({\r\n  name: \"screenReducer\",\r\n  initialState,\r\n  reducers: {\r\n    changeScreen: (state, action) => {\r\n      state.screen = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default screenSlice;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport accountSlice, { login } from \"./reducers/account\";\r\nimport screenSlice from \"./reducers/screens\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    accountReducer: accountSlice.reducer,\r\n    screenReducer: screenSlice.reducer,\r\n  },\r\n});\r\n\r\nexport const accountActions = {\r\n  ...accountSlice.actions,\r\n  asyncActions: { login },\r\n};\r\n\r\nexport const screenActions = {\r\n  ...screenSlice.actions,\r\n};\r\nexport default store;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { NotificationContainer } from \"react-notifications\";\r\nimport { InputField, Button, CheckBox, Logo, Header } from \"../../components\";\r\nimport { storage } from \"../../utils\";\r\nimport { accountActions, screenActions } from \"../../redux\";\r\nimport css from \"./style.module.scss\";\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"testEmain@email.com\");\r\n  const [password, setPassword] = useState(\"1q2w3e4r5t\");\r\n  const [isSaveAccount, setIsSaveAccount] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const login = useCallback((email, password) =>\r\n    dispatch(\r\n      accountActions.asyncActions.login({ email, password, isSaveAccount })\r\n    )\r\n  );\r\n  const changeScreen = useCallback((screen) =>\r\n    dispatch(screenActions.changeScreen(screen))\r\n  );\r\n  useEffect(\r\n    () => storage.set(\"https://skymp-auth.herokuapp.com/api/\", \"authUrl\"),\r\n    []\r\n  );\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className={css.loginContent}>\r\n        <Logo />\r\n        <div className={css.loginContent_form}>\r\n          <InputField\r\n            value={email}\r\n            setValue={setEmail}\r\n            // label={\"Email\"}\r\n            type=\"text\"\r\n            placeholder=\"Почта\"\r\n          />\r\n          <InputField\r\n            value={password}\r\n            setValue={setPassword}\r\n            // label={\"Password\"}\r\n            placeholder=\"Пароль\"\r\n            type=\"password\"\r\n          />\r\n          <CheckBox\r\n            isChecked={isSaveAccount}\r\n            onClick={() => setIsSaveAccount((prev) => !prev)}\r\n            label=\"Запомнить меня\"\r\n          />\r\n          <Button name=\"Войти\" onClick={() => login(email, password)} />\r\n          <Button\r\n            name=\"Регистрация\"\r\n            onClick={() => changeScreen(\"Registration\")}\r\n          />\r\n        </div>\r\n\r\n        <NotificationContainer />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport css from \"./style.module.scss\";\r\nimport { InputField, Button, Logo, Header } from \"../../components\";\r\nimport { accountActions, screenActions } from \"../../redux\";\r\nimport { authApi } from \"../../api\";\r\n\r\nconst BackButton = ({ text, onClick = () => {} }) => {\r\n  return (\r\n    <div className={css.backButton} onClick={() => onClick()}>\r\n      <div className={css.backButton_icon}></div>\r\n      <div className={css.backButton_text}>{text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Registration = () => {\r\n  const [email, setEmail] = useState(\"testEmain@email.com\");\r\n  const [password, setPassword] = useState(\"1q2w3e4r5t\");\r\n  const [name, setName] = useState(\"TestName1233\");\r\n\r\n  const dispatch = useDispatch();\r\n  const changeScreen = useCallback((screen) =>\r\n    dispatch(screenActions.changeScreen(screen))\r\n  );\r\n  const onRegistration = () => {\r\n    authApi.registration(email, password, name);\r\n  };\r\n  return (\r\n    <>\r\n      <Header\r\n        Left={() => (\r\n          <BackButton text=\"Назад\" onClick={() => changeScreen(\"Login\")} />\r\n        )}\r\n      />\r\n      <div className={css.registrationContent}>\r\n        <Logo text=\"Регистрация\" />\r\n        <div className={css.registrationContent_form}>\r\n          <InputField\r\n            value={name}\r\n            setValue={setName}\r\n            // label={\"Имя\"}\r\n            type=\"text\"\r\n            placeholder=\"Имя\"\r\n          />\r\n          <InputField\r\n            value={email}\r\n            setValue={setEmail}\r\n            // label={\"Почта\"}\r\n            type=\"text\"\r\n            placeholder=\"Почта\"\r\n          />\r\n          <InputField\r\n            value={password}\r\n            setValue={setPassword}\r\n            // label={\"Пароль\"}\r\n            placeholder=\"Пароль\"\r\n            type=\"password\"\r\n          />\r\n          <Button name=\"Регистрация\" onClick={() => onRegistration()} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Registration;\r\n","import React, { useEffect, useState, useCallback, Component } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { screenActions } from \"../../redux\";\r\nimport { Header } from \"../../components\";\r\nimport { Preloader, Login, Registration, Main } from \"../\";\r\nimport css from \"./style.module.scss\";\r\nconst { app } = window.require(\"electron\").remote;\r\n\r\nconst routers = {\r\n  Preloader: Preloader,\r\n  Login: Login,\r\n  Registration: Registration,\r\n  Main: Main,\r\n};\r\n\r\nfunction ScreenWrapper({ component: Component }, ...rest) {\r\n  return Component ? <Component {...rest} /> : <></>;\r\n}\r\n\r\nconst Router = () => {\r\n  const { user, loading } = useSelector((state) => state.accountReducer);\r\n  const { screen } = useSelector((state) => state.screenReducer);\r\n  const dispatch = useDispatch();\r\n  const changeScreen = useCallback((screen) =>\r\n    dispatch(screenActions.changeScreen(screen))\r\n  );\r\n\r\n  useEffect(() => {\r\n    user && changeScreen(\"Main\");\r\n    !user && changeScreen(\"Login\");\r\n  }, [user]);\r\n  return (\r\n    <div className={css.app}>\r\n      <ScreenWrapper\r\n        component={routers[loading === \"pending\" ? \"Preloader\" : screen]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React from \"react\";\r\n\r\nconst Preloader = (params) => {\r\n  return <div> Preloader</div>;\r\n};\r\n\r\nexport default Preloader;\r\n","import React, { Component } from \"react\";\nimport { Router } from \"./screens\";\n\nclass App extends Component {\n  render() {\n    return <Router />;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux\";\nimport \"./index.scss\";\nimport \"react-notifications/lib/notifications.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"style_table__2TLCE\",\"table_row\":\"style_table_row__3XQ9g\",\"table_row_ip\":\"style_table_row_ip__vO0EC\",\"table_row_name\":\"style_table_row_name__3V0z7\",\"selected\":\"style_selected__1avxB\"};"],"sourceRoot":""}