{"version":3,"sources":["components/table/style.module.scss","components/logo/style.module.scss","screens/main/style.module.scss","screens/registration/style.module.scss","components/header/style.module.scss","components/radioButton/style.module.scss","components/checkBox/style.module.scss","components/button/style.module.scss","screens/login/style.module.scss","components/inputField/style.module.scss","screens/router/style.module.scss","screens/main/UserBlock/style.module.scss","utils/storage.js","api/auth.js","api/servers.js","redux/reducers/account.js","redux/reducers/screens.js","redux/index.js","components/header/index.jsx","components/inputField/index.jsx","components/table/index.jsx","components/button/index.jsx","components/checkBox/index.jsx","components/logo/index.jsx","screens/main/UserBlock/index.jsx","screens/main/index.jsx","screens/login/index.jsx","screens/registration/index.jsx","screens/router/index.jsx","screens/preloader/index.jsx","App.js","index.js"],"names":["module","exports","storage","set","data","name","localStorage","setItem","JSON","stringify","get","parse","getItem","api","login","email","password","a","async","url","axios","post","then","res","catch","e","alert","registration","response","getSession","usrId","address","token","headers","Authorization","console","log","getServers","createAsyncThunk","payload","rejectWithValue","authApi","user","isSaveAccount","initialState","loading","error","accountSlice","createSlice","reducers","logout","state","action","extraReducers","pending","type","fulfilled","rejected","screenSlice","screen","changeScreen","store","configureStore","reducer","accountReducer","screenReducer","accountActions","actions","asyncActions","screenActions","app","window","require","remote","Header","Left","Center","Right","backgroundColor","className","css","header","style","header_right","header_right_hide","onClick","header_right_close","exit","InputField","placeholder","value","setValue","label","color","onChange","target","input","Row","ip","maxPlayers","online","port","isSelected","chooseServer","table_row","selected","table_row_ip","table_row_name","table_row_online","Table","servers","chosenServer","table","map","serverData","i","key","Button","button","CheckBox","isChecked","checkBox","checkBox_square","checkBox_square_checked","Logo","text","welcome","welcome_logo","welcome_text","welcome_text_line","welcome_text_value","UserBlock","setShowMenu","showMenu","userBlock","userBlock_menu","userBlock_menu_button","userBlock_friend","userBlock_question","userBlock_setting","userBlock_name","userBlock_arrowDown","prev","userBlock_line","fs","shell","tabs","id","Tabs","selectedTab","setSelectedTab","tab","tabs_tab","tabs_tab_selected","Main","useState","serversData","setServersData","setTab","dispatch","useDispatch","useSelector","useCallback","gameData","session","setChosenServer","gamePath","setGamePath","useEffect","serversApi","saveSession","fileName","existsSync","unlinkSync","appendFile","err","NotificationManager","warning","openItem","runGame","logoLittle","main","server","buttons","success","Login","setEmail","setPassword","setIsSaveAccount","loginContent","loginContent_form","BackButton","backButton","backButton_icon","backButton_text","Registration","setName","registrationContent","registrationContent_form","routers","Preloader","ScreenWrapper","Component","component","rest","Router","params","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69148eaf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"style_table__2TLCE\",\"table_row\":\"style_table_row__3XQ9g\",\"table_row_ip\":\"style_table_row_ip__vO0EC\",\"table_row_name\":\"style_table_row_name__3V0z7\",\"selected\":\"style_selected__1avxB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"welcome\":\"style_welcome__2SbjV\",\"welcome_logo\":\"style_welcome_logo__2n_br\",\"welcome_text\":\"style_welcome_text__2zhyI\",\"welcome_text_value\":\"style_welcome_text_value__2-ay3\",\"welcome_text_line\":\"style_welcome_text_line__2GVLS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"style_main__2rq8m\",\"buttons\":\"style_buttons__20n9r\",\"logoLittle\":\"style_logoLittle__3xDQ4\",\"tabs\":\"style_tabs__1RDpx\",\"tabs_tab\":\"style_tabs_tab__3kYjY\",\"tabs_tab_selected\":\"style_tabs_tab_selected__2oZbz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationContent\":\"style_registrationContent__1xvuW\",\"registrationContent_form\":\"style_registrationContent_form__1UKkS\",\"backButton\":\"style_backButton__fY_Qj\",\"backButton_icon\":\"style_backButton_icon__hAJ8V\",\"backButton_text\":\"style_backButton_text__2YrVF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"style_header__OMpc0\",\"header_back\":\"style_header_back__3kvDu\",\"header_back_icon\":\"style_header_back_icon__FQJmi\",\"header_back_text\":\"style_header_back_text__3PWnO\",\"header_right\":\"style_header_right__8ufBv\",\"header_right_close\":\"style_header_right_close__Y1G4C\",\"header_right_hide\":\"style_header_right_hide__nac9m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioButton\":\"style_radioButton__2Fc5S\",\"radioButton_circle\":\"style_radioButton_circle__dIDSy\",\"radioButton_circle_checked\":\"style_radioButton_circle_checked__stn5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkBox\":\"style_checkBox__3H6Uf\",\"checkBox_square\":\"style_checkBox_square__3yD37\",\"checkBox_square_checked\":\"style_checkBox_square_checked__1_AUX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"style_button__1HQff\",\"button_white\":\"style_button_white__3xCVX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContent\":\"style_loginContent__3QkuD\",\"loginContent_servers\":\"style_loginContent_servers__StBcc\",\"loginContent_form\":\"style_loginContent_form__uxtyC\",\"loginContent_welcome\":\"style_loginContent_welcome__1Gfi5\",\"loginContent_welcome_logo\":\"style_loginContent_welcome_logo__3NYgC\",\"loginContent_welcome_text\":\"style_loginContent_welcome_text__1_u53\",\"loginContent_welcome_text_value\":\"style_loginContent_welcome_text_value__110L3\",\"loginContent_welcome_text_line\":\"style_loginContent_welcome_text_line__2DOVT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"style_input__178bl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"style_app__2q9UC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userBlock\":\"style_userBlock__1IyvM\",\"userBlock_arrowDown\":\"style_userBlock_arrowDown__gXR18\",\"userBlock_line\":\"style_userBlock_line__2Tv_B\",\"userBlock_name\":\"style_userBlock_name__3D-4W\",\"userBlock_menu\":\"style_userBlock_menu__1U4z1\",\"userBlock_menu_button\":\"style_userBlock_menu_button__3KwAm\"};","const set = (data, name) => localStorage.setItem(name, JSON.stringify(data));\r\n\r\nconst get = (data) => JSON.parse(localStorage.getItem(data));\r\n\r\nconst storage = {\r\n  set,\r\n  get,\r\n};\r\n\r\nexport default storage;\r\n","import axios from \"axios\";\r\nimport { storage } from \"../utils\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\n\r\nconst login = async (email, password) => {\r\n  const url = storage.get(\"authUrl\");\r\n  return await axios\r\n    .post(`${url}users/login`, { email, password })\r\n    .then((res) => res.data)\r\n    .catch((e) => alert(e));\r\n};\r\n\r\nconst registration = async (email, password, name) => {\r\n  const url = storage.get(\"authUrl\");\r\n  return await axios\r\n    .post(`${url}users`, { email, password, name })\r\n    .then((res) => alert(\"Ok!\"))\r\n    .catch((e) => alert(e?.response?.data ?? \"Something wrong.\"));\r\n};\r\n\r\nconst getSession = async (usrId, address, token) => {\r\n  const url = storage.get(\"authUrl\");\r\n\r\n  return await axios\r\n    .post(\r\n      `${url}users/${usrId}/play/${address}`,\r\n      {},\r\n      { headers: { Authorization: token } }\r\n    )\r\n    .then((res) => res.data)\r\n    .catch((e) => console.log(e));\r\n};\r\n\r\nconst api = { login, registration, getSession };\r\nexport default api;\r\n","import axios from \"axios\";\r\nimport { storage } from \"../utils\";\r\n\r\nconst getServers = async (email, password) => {\r\n  const url = storage.get(\"authUrl\");\r\n  return await axios\r\n    .get(`${url}servers`, { email, password })\r\n    .then((res) => res.data)\r\n    .catch((e) => console.log(e));\r\n};\r\n\r\nconst api = { getServers };\r\nexport default api;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { storage } from \"../../utils\";\r\nimport { authApi } from \"../../api\";\r\nexport const login = createAsyncThunk(\r\n  \"accountReducer/login\",\r\n  async (payload, { rejectWithValue }) => {\r\n    try {\r\n      const user = await authApi.login(payload.email, payload.password);\r\n      if (payload.isSaveAccount) {\r\n        storage.set(user, \"connection\");\r\n      }\r\n      return user;\r\n    } catch (err) {\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  user: storage.get(\"connection\") ?? null,\r\n  loading: \"\",\r\n  error: \"\",\r\n};\r\n\r\nconst accountSlice = createSlice({\r\n  name: \"accountReducer\",\r\n  initialState,\r\n  reducers: {\r\n    logout: (state, action) => {\r\n      storage.set(null, \"connection\");\r\n      state.user = null;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [login.pending.type]: (state) => {\r\n      state.loading = \"pending\";\r\n      state.error = \"\";\r\n    },\r\n    [login.fulfilled.type]: (state, { payload }) => {\r\n      state.loading = \"idle\";\r\n      state.error = \"\";\r\n      state.user = payload;\r\n    },\r\n    [login.rejected.type]: (state, action) => {\r\n      state.loading = \"idle\";\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default accountSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { storage } from \"../../utils\";\r\n\r\nconst initialState = {\r\n  screen: \"Preloader\",\r\n  loading: \"\",\r\n  error: \"\",\r\n};\r\n\r\nconst screenSlice = createSlice({\r\n  name: \"screenReducer\",\r\n  initialState,\r\n  reducers: {\r\n    changeScreen: (state, action) => {\r\n      state.screen = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default screenSlice;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport accountSlice, { login } from \"./reducers/account\";\r\nimport screenSlice from \"./reducers/screens\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    accountReducer: accountSlice.reducer,\r\n    screenReducer: screenSlice.reducer,\r\n  },\r\n});\r\n\r\nexport const accountActions = {\r\n  ...accountSlice.actions,\r\n  asyncActions: { login },\r\n};\r\n\r\nexport const screenActions = {\r\n  ...screenSlice.actions,\r\n};\r\nexport default store;\r\n","import React from \"react\";\r\nimport css from \"./style.module.scss\";\r\nconst { app } = window.require(\"electron\").remote;\r\nconst Header = ({\r\n  Left = () => <div></div>,\r\n  Center = () => <div></div>,\r\n  Right = () => <div></div>,\r\n  backgroundColor = \"none\",\r\n}) => {\r\n  const closeApp = () => app.exit();\r\n  const hideApp = () => {};\r\n  return (\r\n    <div className={css.header} style={{ backgroundColor: backgroundColor }}>\r\n      <Left />\r\n      <Center />\r\n      <div className={css.header_right}>\r\n        <Right />\r\n        <div className={css.header_right_hide} onClick={() => hideApp()} />\r\n        <div className={css.header_right_close} onClick={() => closeApp()} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport css from \"./style.module.scss\";\r\nconst InputField = ({\r\n  placeholder = \"placeholder\",\r\n  value,\r\n  setValue,\r\n  label = \"\",\r\n  type = \"text\",\r\n}) => {\r\n  return (\r\n    <>\r\n      {!!label && <div style={{ color: \"white\" }}>{label}</div>}\r\n      <input\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n        className={css.input}\r\n        placeholder={placeholder}\r\n        type={type}\r\n      ></input>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\nimport css from \"./style.module.scss\";\r\nconst Row = ({\r\n  ip,\r\n  maxPlayers,\r\n  name,\r\n  online,\r\n  port,\r\n  isSelected = false,\r\n  chooseServer,\r\n  header\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`${css.table_row} ${isSelected ? css.selected : \"\"}`}\r\n      onClick={() =>!header&& chooseServer()}\r\n    >\r\n      <div className={css.table_row_ip}>\r\n        {ip}:{port}\r\n      </div>\r\n      <div className={css.table_row_name}>{name}</div>\r\n      <div className={css.table_row_online}>\r\n        {online}\r\n        {maxPlayers ? \"/\" : \"\"}\r\n        {maxPlayers}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Table = ({ servers = [], chosenServer, chooseServer }) => {\r\n  return (\r\n    <div className={css.table}>\r\n      <Row name=\"Имя\" ip=\"ip\" online=\"Онлайн\" header/>\r\n      {servers.map((serverData, i) => (\r\n        <Row\r\n          key={i}\r\n          {...serverData}\r\n          isSelected={chosenServer[\"server-ip\"] === serverData.ip}\r\n          chooseServer={() => chooseServer(serverData)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport css from \"./style.module.scss\";\r\nconst Button = ({ name, type = \"white\", onClick }) => {\r\n  return (\r\n    <div className={`${css[`button_${type}`]} ${css.button}`} onClick={() => onClick()}>\r\n      {name}\r\n    </div>\r\n  );\r\n};\r\nexport default Button;\r\n","import React from \"react\";\r\nimport css from \"./style.module.scss\";\r\nconst CheckBox = ({ onClick, isChecked = false, label }) => {\r\n  return (\r\n    <div\r\n      className={css.checkBox}\r\n      onClick={() => onClick()}\r\n    >\r\n      <div className={css.checkBox_square}>\r\n        {isChecked && <div className={css.checkBox_square_checked}></div>}\r\n      </div>\r\n      {label && <div>{label}</div>}\r\n    </div>\r\n  );\r\n};\r\nexport default CheckBox;\r\n","import React from \"react\";\r\nimport css from \"./style.module.scss\";\r\nconst Logo = ({ text = \"Добро пожаловать\" }) => {\r\n  return (\r\n    <div className={css.welcome}>\r\n      <div className={css.welcome_logo}></div>\r\n      <div className={css.welcome_text}>\r\n        <div className={css.welcome_text_line}></div>\r\n        <div className={css.welcome_text_value}>{text} </div>\r\n        <div className={css.welcome_text_line}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  Logo;\r\n","import React from \"react\";\r\nimport css from \"./style.module.scss\";\r\nconst UserBlock = ({ name = \"\", setShowMenu, showMenu, logout }) => {\r\n  const Menu = () => {\r\n    return (\r\n      <div className={css.userBlock_menu}>\r\n        <div className={css.userBlock_menu_button} onClick={() => logout()}>\r\n          Выйти\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={css.userBlock}>\r\n      {showMenu && <Menu />}\r\n      <div className={css.userBlock_friend}></div>\r\n      <div className={css.userBlock_question}></div>\r\n      <div className={css.userBlock_setting}></div>\r\n      <div className={css.userBlock_name}>{name}</div>\r\n      <div\r\n        className={css.userBlock_arrowDown}\r\n        onClick={() => setShowMenu((prev) => !prev)}\r\n      ></div>\r\n      <div className={css.userBlock_line}></div>\r\n    </div>\r\n  );\r\n};\r\nexport default UserBlock;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { accountActions } from \"../../redux\";\r\nimport { Table, Button, InputField, Header } from \"../../components\";\r\nimport UserBlock from \"./UserBlock\";\r\nimport { storage } from \"../../utils\";\r\n\r\nimport { serversApi, authApi } from \"../../api\";\r\nimport css from \"./style.module.scss\";\r\nconst fs = window.require(\"fs\");\r\nconst { shell } = window.require(\"electron\").remote;\r\n\r\nconst tabs = [\r\n  {\r\n    id: \"all\",\r\n    text: \"Все сервера\",\r\n  },\r\n  {\r\n    id: \"elects\",\r\n    text: \"Все сервера\",\r\n  },\r\n  {\r\n    id: \"news\",\r\n    text: \"Новости\",\r\n  },\r\n];\r\n\r\nconst Tabs = ({ selectedTab, setSelectedTab = () => {} }) => {\r\n  return (\r\n    <div className={css.tabs}>\r\n      {tabs.map((tab) => (\r\n        <div\r\n          key={tab.id}\r\n          className={`${css.tabs_tab} ${\r\n            selectedTab === tab.id ? css.tabs_tab_selected : \"\"\r\n          }`}\r\n          onClick={() => setSelectedTab(tab.id)}\r\n        >\r\n          {tab.text}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Main = () => {\r\n  const [serversData, setServersData] = useState([]);\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  const [tab, setTab] = useState(\"all\");\r\n  const dispatch = useDispatch();\r\n  const { user, loading } = useSelector((state) => state.accountReducer);\r\n  const logout = useCallback(() => dispatch(accountActions.logout()));\r\n  const [chosenServer, setChosenServer] = useState({\r\n    \"server-ip\": \"\",\r\n    \"server-port\": 0,\r\n    \"show-me\": false,\r\n    \"enable-console\": false,\r\n    gameData: {\r\n      session: \"\",\r\n    },\r\n  });\r\n  const [gamePath, setGamePath] = useState(storage.get(\"gamePath\") ?? \"\");\r\n\r\n  useEffect(() => {\r\n    storage.set(gamePath, \"gamePath\");\r\n  }, [gamePath]);\r\n\r\n  useEffect(() => {\r\n    serversApi.getServers().then(setServersData);\r\n  }, []);\r\n\r\n  const chooseServer = async (server) => {\r\n    if (user)\r\n      authApi\r\n        .getSession(user.id, `${server.ip}:${server.port}`, user.token)\r\n        .then((session) => {\r\n          console.log(session);\r\n          setChosenServer((prev) => ({\r\n            ...prev,\r\n            \"server-ip\": server.ip,\r\n            \"server-port\": server.port,\r\n            gameData: {\r\n              session: session.session,\r\n            },\r\n          }));\r\n        });\r\n  };\r\n\r\n  const runGame = () => {\r\n    try {\r\n      if (gamePath) {\r\n        shell.openItem(`${gamePath}/skse64_loader.exe`);\r\n      } else {\r\n        alert(\"gamePath \");\r\n      }\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  };\r\n  const saveSession = () => {\r\n    if (gamePath) {\r\n      const fileName = `${gamePath}/Data/Platform/Plugins/skymp5-client-settings.txt`;\r\n      try {\r\n        const isExist = fs.existsSync(fileName);\r\n        if (!isExist) {\r\n          fs.appendFile(fileName, JSON.stringify(chosenServer), (err) =>\r\n            console.log(err)\r\n          );\r\n        } else {\r\n          fs.unlinkSync(fileName);\r\n          fs.appendFile(fileName, JSON.stringify(chosenServer), (err) =>\r\n            console.log(err)\r\n          );\r\n        }\r\n        if (!chosenServer[\"server-ip\"]) {\r\n          NotificationManager.warning(\"Выбери сервер.\");\r\n        }\r\n\r\n        user?.id && chosenServer[\"server-ip\"] && runGame();\r\n      } catch (e) {\r\n        alert(e);\r\n      }\r\n    } else {\r\n      NotificationManager.warning(\"Надо путь игры\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Header\r\n        backgroundColor=\"#1F1F1F\"\r\n        Left={() => <Tabs selectedTab={tab} setSelectedTab={setTab} />}\r\n        Center={() => <div className={css.logoLittle} />}\r\n        Right={() => (\r\n          <UserBlock\r\n            name={user.name}\r\n            showMenu={showMenu}\r\n            setShowMenu={setShowMenu}\r\n            logout={logout}\r\n          />\r\n        )}\r\n      />\r\n      <div\r\n        className={css.main}\r\n        onClick={() => {\r\n          setShowMenu(false);\r\n        }}\r\n      >\r\n        <Table\r\n          servers={serversData}\r\n          chosenServer={chosenServer}\r\n          chooseServer={chooseServer}\r\n        />\r\n        <InputField\r\n          value={gamePath}\r\n          setValue={setGamePath}\r\n          placeholder=\"Путь игры (//)\"\r\n        />\r\n        <div className={css.buttons}>\r\n          <div>\r\n            <Button\r\n              name={\"Играть\"}\r\n              onClick={() => {\r\n                saveSession();\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Button\r\n              name={\"Обновить\"}\r\n              onClick={() => {\r\n                serversApi.getServers().then(setServersData);\r\n                NotificationManager.success(\"Обновлено\");\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <NotificationContainer />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { NotificationContainer } from \"react-notifications\";\r\nimport { InputField, Button, CheckBox, Logo, Header } from \"../../components\";\r\nimport { storage } from \"../../utils\";\r\nimport { accountActions, screenActions } from \"../../redux\";\r\nimport css from \"./style.module.scss\";\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"testEmain@email.com\");\r\n  const [password, setPassword] = useState(\"1q2w3e4r5t\");\r\n  const [isSaveAccount, setIsSaveAccount] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const login = useCallback((email, password) =>\r\n    dispatch(\r\n      accountActions.asyncActions.login({ email, password, isSaveAccount })\r\n    )\r\n  );\r\n  \r\n  const changeScreen = useCallback((screen) =>\r\n    dispatch(screenActions.changeScreen(screen))\r\n  );\r\n\r\n  useEffect(\r\n    () => storage.set(\"https://skymp-auth.herokuapp.com/api/\", \"authUrl\"),\r\n    []\r\n  );\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className={css.loginContent}>\r\n        <Logo />\r\n        <div className={css.loginContent_form}>\r\n          <InputField\r\n            value={email}\r\n            setValue={setEmail}\r\n            // label={\"Email\"}\r\n            type=\"text\"\r\n            placeholder=\"Почта\"\r\n          />\r\n          <InputField\r\n            value={password}\r\n            setValue={setPassword}\r\n            // label={\"Password\"}\r\n            placeholder=\"Пароль\"\r\n            type=\"password\"\r\n          />\r\n          <CheckBox\r\n            isChecked={isSaveAccount}\r\n            onClick={() => setIsSaveAccount((prev) => !prev)}\r\n            label=\"Запомнить меня\"\r\n          />\r\n          <Button name=\"Войти\" onClick={() => login(email, password)} />\r\n          <Button\r\n            name=\"Регистрация\"\r\n            onClick={() => changeScreen(\"Registration\")}\r\n          />\r\n        </div>\r\n\r\n        <NotificationContainer />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport css from \"./style.module.scss\";\r\nimport { InputField, Button, Logo, Header } from \"../../components\";\r\nimport { accountActions, screenActions } from \"../../redux\";\r\nimport { authApi } from \"../../api\";\r\n\r\nconst BackButton = ({ text, onClick = () => {} }) => {\r\n  return (\r\n    <div className={css.backButton} onClick={() => onClick()}>\r\n      <div className={css.backButton_icon}></div>\r\n      <div className={css.backButton_text}>{text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Registration = () => {\r\n  const [email, setEmail] = useState(\"testEmain@email.com\");\r\n  const [password, setPassword] = useState(\"1q2w3e4r5t\");\r\n  const [name, setName] = useState(\"TestName1233\");\r\n\r\n  const dispatch = useDispatch();\r\n  const changeScreen = useCallback((screen) =>\r\n    dispatch(screenActions.changeScreen(screen))\r\n  );\r\n  const onRegistration = () => {\r\n    authApi.registration(email, password, name);\r\n  };\r\n  return (\r\n    <>\r\n      <Header\r\n        Left={() => (\r\n          <BackButton text=\"Назад\" onClick={() => changeScreen(\"Login\")} />\r\n        )}\r\n      />\r\n      <div className={css.registrationContent}>\r\n        <Logo text=\"Регистрация\" />\r\n        <div className={css.registrationContent_form}>\r\n          <InputField\r\n            value={name}\r\n            setValue={setName}\r\n            // label={\"Имя\"}\r\n            type=\"text\"\r\n            placeholder=\"Имя\"\r\n          />\r\n          <InputField\r\n            value={email}\r\n            setValue={setEmail}\r\n            // label={\"Почта\"}\r\n            type=\"text\"\r\n            placeholder=\"Почта\"\r\n          />\r\n          <InputField\r\n            value={password}\r\n            setValue={setPassword}\r\n            // label={\"Пароль\"}\r\n            placeholder=\"Пароль\"\r\n            type=\"password\"\r\n          />\r\n          <Button name=\"Регистрация\" onClick={() => onRegistration()} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Registration;\r\n","import React, { useEffect, useState, useCallback, Component } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { screenActions } from \"../../redux\";\r\nimport { Header } from \"../../components\";\r\nimport { Preloader, Login, Registration, Main } from \"../\";\r\nimport css from \"./style.module.scss\";\r\nconst { app } = window.require(\"electron\").remote;\r\n\r\nconst routers = {\r\n  Preloader: Preloader,\r\n  Login: Login,\r\n  Registration: Registration,\r\n  Main: Main,\r\n};\r\n\r\nfunction ScreenWrapper({ component: Component }, ...rest) {\r\n  return Component ? <Component {...rest} /> : <></>;\r\n}\r\n\r\nconst Router = () => {\r\n  const { user, loading } = useSelector((state) => state.accountReducer);\r\n  const { screen } = useSelector((state) => state.screenReducer);\r\n  const dispatch = useDispatch();\r\n  const changeScreen = useCallback((screen) =>\r\n    dispatch(screenActions.changeScreen(screen))\r\n  );\r\n\r\n  useEffect(() => {\r\n    user && changeScreen(\"Main\");\r\n    !user && changeScreen(\"Login\");\r\n  }, [user]);\r\n  return (\r\n    <div className={css.app}>\r\n      <ScreenWrapper\r\n        component={routers[loading === \"pending\" ? \"Preloader\" : screen]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React from \"react\";\r\n\r\nconst Preloader = (params) => {\r\n  return <div> Preloader</div>;\r\n};\r\n\r\nexport default Preloader;\r\n","import React, { Component } from \"react\";\nimport { Router } from \"./screens\";\n\nclass App extends Component {\n  render() {\n    return <Router />;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux\";\nimport \"./index.scss\";\nimport \"react-notifications/lib/notifications.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}